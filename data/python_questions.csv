Question,Answer
List Comprehension,"new_list = [new item for item in list if]
if is optional"
Relative FilePath,"""file=../../folder/folder/file.extension
../ is to go up a nested folder"
Absolute FilePath,C:/folder/folder/folder/folder/file.extension
Get an input,"variable = input(""Prompt for input: "")"
Converting Data Types,"n = 354
new_n = float(n)
print(new_n) #result 354.0"
f-Strings,"days = 365
print(f""There are {days}
in a year"")"
"Checking Data Types
","n = 3.14159
type(n) #result float"
Arithmetic Operators,"3+2 #Add
4-1 #Subtract
2*3 #Multiply
5/2 #Divide
5**2 #Exponent"
The += Operator,"my_number = 4
my_number += 2
#result is 6"
The Modulo Operator,"5 % 2
#result is 1"
Creating Functions,"def my_function():
    print(""Hello"")
    name = input(""Your name:"")
    print(f""Hello {name}"")"
Functions with Inputs,"def add(n1, n2):
    print(n1 + n2)"
Functions with Outputs,"def add(n1, n2):
    return n1 + n2
    result = add(2, 3)"
Variable Scope,"n = 2
def my_function():
    n = 3
    print(n)
print(n)  #Prints 2
my_function()  #Prints 3"
Keyword Arguments,"def divide(n1, n2):
    result = n1 / n2
#Option 1:
divide(10, 5)
#Option 2:
divide(n2=5, n1=10)"
"Comparison operators
","> Greater than
< Lesser than
>= Greater than or equal to
<= Lesser than or equal to
== Is equal to
!= Is not equal to"
"while Loop
","n = 1
while n < 100:
    n += 1"
"for Loop
","all_fruits = [""apple"",
""banana"", ""orange""]
for fruit in all_fruits:
print(fruit)"
_ in a for Loop,"for _ in range(100):
#Do something 100 times."
break,"scores = [34, 67, 99, 105]
for s in scores:
    if s > 100:
        print(""Invalid"")
        break
    print(s)"
continue,"n = 0
while n < 100:
    n += 1
    if n % 2 == 0:
        continue  # Skips this iteration of loop
    print(n)
#Prints all the odd numbers"
Infinite Loops,"while 5 > 1:
    print(""I'm a survivor"")"
"Adding Lists Together
","list1 = [1, 2, 3]
list2 = [9, 8, 7]
new_list = list1 + list2
list1 += list2"
Adding an Item to a List,"all_fruits = [""apple"",
""banana"", ""orange""]
all_fruits.append(""pear"")"
List Index,"letters = [""a"", ""b"", ""c""]
letters[0]
#Result:""a""
letters[-1]
#Result: ""c"""
"List Slicing
","#list[start:end]
letters = [""a"",""b"",""c"",""d""]
letters[1:3]
#Result: [""b"", ""c""]"
range,"# range(start, end, step)
for i in range(6, 0, -2):
    print(i)
# result: 6, 4, 2
# 0 is not included."
"Randomisation, integer
","import random
# randint(start, end)
n = random.randint(2, 5)
#n can be 2, 3, 4 or 5."
"Randomisation, choice","import random
# choice(sequence)
n = random.choice(list,tuple, or range)
#n can be any item in the list,tuple, or range."
round,"round(4.6)
# result 5
round(5.6784, 2)
# result 5.68"
Absolute Value,"abs(-4.6)
# result 4.6"
"Importing
","import random
n = random.randint(3, 10)"
Importing everything,"from random import *
n = randint(1, 5)"
Aliasing (import),"import random as r
n = r.randint(1, 5)"
Importing from modules,"from random import randint
n = randint(1, 5)"
Creating a Python Class,"class MyClass:
    #define class"
Creating an Object from a Class,"class Car:
    pass
my_toyota = Car()"
Class Methods,"class Car:
    def drive(self):
    print(""move"")
my_honda = Car()
my_honda.drive()"
Class Variables,"class Car:
colour = ""black""
car1 = Car()
print(car1.colour) #black"
The __init__ method,"class Car:
    def __init__(self):
        print(""Building car"")
my_toyota = Car()
#You will see ""building car""
#printed."
Class Properties,"class Car:
    def __init__(self, name):
        self.name = ""Jimmy"""
Class Inheritance,"class Animal:
    def breathe(self):
        print(""breathing"")
class Fish(Animal):
    def breathe(self):
        super().breathe()
        print(""underwater"")"
Opening a file,"with open(""filepath"") as filename:
""w"" for writeable, ""r"" for readonly, ""a"" for append
""w"" will create the file if it doesn't exist"
Dictionary comprehension,"new_dict = {new_key:new_value for item in list if}
if is optional"
Looping through dictionaries,"for (key,value) in dict_name.items()
    print(value)"
Creating a pandas dataframe,"new_dataframe = pandas.DataFrame(data)
data is an ndarray (structured or homogeneous), Iterable, dict, or DataFrame"
Creating a pandas dataframe from csv,"new_dataframe = pandas.read_csv(""filepath"")"
Loop through rows of a dataframe,"for (index, row) in name_of_dataframe.iterrows():
    print(row.columnname) #Or do anything else!"
Unlimited Positional Arguments,"def add(*args): #Can supply any number of args and it will add them
    sum = 0   
    for n in args:
        sum += n
    return sum"
Unlimited Keyword Arguments,"class Car:  #Using **kw (or any name after **)
    def __init__(self, **kw):             #allows unlimited keyword arguments
        self.make = kw.get[""make""]    #the get method only using that kwarg if it exists
        self.model = kw.get[""model""]
my_car = Car(make=""Nissan"")"
Exceptions,"try ""something""
except ""error""
    do this if error happens
else
    do this if error didn't happen
finally
    do this no matter what"
Dumping json data,"with open(""data.json"", ""w"") as file_name:
    json.dump(data, file_name, indent=4)"
Updating json data,"with open(""data.json"", ""r"") as file_name:
    data = json.load(file_name)
    json.update(new_data)   # appends new data to json file"